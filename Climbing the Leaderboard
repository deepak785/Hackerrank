#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#define Max 1000000
using namespace std;
long int binsearch(long int A[],long int key,long int k)
    { long int mid,low=0,high=k;
     while(low<=high)
        { mid=(low+high)/2;
             if(A[mid]==key)
                 return mid;
            else if(A[mid]>key)
                 low=mid+1;
             else
                 { if(A[mid]<key)
                     high=mid-1;
                 }
        }
      return -1;
    }/*if(A[mid]<key)
            return mid+1-1;
         else if(A[mid]>key)
            return mid+1+1;
        else 
            return mid+1;*/
         
           
     
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    long int n,m,k=0,c=1;long int alc[Max],S[Max],NS[Max];
    cin >> n;
    for(long int i=0;i<n;i++)
    {cin >>S[i];}
    for(long int i=0;i<n;i++)
        { if(S[i]!=S[i+1])
               NS[k++]=S[i];
        }       
     cin >> m;
      for(long int i=0;i<m;i++)
          cin >> alc[i];
   for(long int i=0;i<m;i++)
      {/*for(long int j=k-1;j>=0;j--)
          {  if(alc[i]<NS[j])
                {
                  cout << j+1+1 << endl;
                   break;
                 }
             else if(alc[i]==NS[j])
               {
                 cout << j+1 << endl;
                  break;
                }
            else if(j==0 && alc[i]>NS[j])
                  { cout << 1 << endl;
                     break;}
              
          }*/  
            if(binsearch(NS,alc[i],k-1)>=0 && alc[i]!=0)
                cout << binsearch(NS,alc[i],k-1)+1 << endl;
             else if(alc[i]<NS[k-1])
                 cout << k+1 << endl;
              else if(alc[i]>NS[0])
                  cout << 1 << endl;
               else
                   {
                      long int l=0,ub=k-1;
                       while(l<=ub)
                           {
                                long int mid=(l+ub)/2;
                              if(NS[mid]<alc[i])
                                  ub=mid-1;
                               else if(NS[mid]>alc[i])
                                   l=mid+1;
                              }
                       if(NS[l]<alc[i])
                           cout << l+1 <<endl;
                       else if(NS[l]>alc[i])
                           cout << l+2 <<endl;
                   }  
                 
                 
                 
                 
     }
    
    return 0;
}
